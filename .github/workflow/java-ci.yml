name: Java CI Pipeline

on:
  push:
    branches: [develop]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build and Test Java Application
    runs-on: ubuntu-latest
    env:
      API_SECRET_KEY: ${{ vars.API_SECRET_KEY }}
      MYSQL_PORT: ${{ vars.MYSQL_PORT }}
      MYSQL_DATABASE: ${{ vars.MYSQL_DATABASE }}
      MYSQL_USER: ${{ vars.MYSQL_USER }}
      MYSQL_PASSWORD: ${{ vars.MYSQL_PASSWORD }}
      MYSQL_URL: ${{ vars.MYSQL_URL }}
      EMAIL_HOST: ${{ vars.EMAIL_HOST }}
      EMAIL_PORT: ${{ vars.EMAIL_PORT }}
      USER_EMAIL: ${{ vars.USER_EMAIL }}
      EMAIL_PASSWORD: ${{ vars.EMAIL_PASSWORD }}
      REDIS_HOST: ${{ vars.REDIS_HOST }}
      REDIS_PORT: ${{ vars.REDIS_PORT }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Create .env file for Docker Compose
        run: |
          echo "Waiting for MySQL on port $MYSQL_PORT..."
          for i in {1..30}; do
            nc -z 127.0.0.1 $MYSQL_PORT && echo "MySQL is up!" && exit 0
            sleep 2
          done
          echo "MySQL did not start in time." && exit 1
          

      - name: Start Docker Compose
        run: docker compose --env-file ./docker/.env -f ./docker/docker-compose.yaml up -d

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL..."
          for i in {1..30}; do
            nc -z 127.0.0.1 ${{ vars.MYSQL_PORT }} && echo "MySQL is up!" && exit 0
            sleep 2
          done
          echo "MySQL did not start in time." && exit 1

      - name: Build and Test
        run: mvn clean verify

      - name: Build JAR file
        run: mvn package -DskipTests

      - name: Stop Docker Compose
        if: always()
        run: docker compose --env-file ./docker/.env -f ./docker/docker-compose.yaml down
